cd /usr/share/fonts
ll -R
sudo apt install fzf
sudo mv Downloads/JetBrainsMono /usr/share/fonts/truetype/
cd /usr/share/fonts/truetype/
cd JetBrainsMono
sudo fc-cache -f -v
cd
sudo apt install xfce4-settings
set -o vi\

xfce4-settinghs
xfce4-settings
sudo apt install java-21
sudo apt install openjdk-21-jdk
sudo apt install tmux
java --version
dotnet tool install --global fsautocomplete
python -m ensurepip --upgrade
python3 -m ensurepip --upgrade
python3 get-pip.py
pip3
udo apt install python3-pip
sudo apt install python3-pyright
sudo apt removw python3-pip
python3
sudo apt install python3-pip
sudo apt remove python3-pip
sudo apt install python3-full
pip
sudo apt-get install python3-pip
pip3 install pyright
sudo pip3 install pyright --break-system-packages
sudo pip3 remove pyright -break-system-packages
sudo pip3 uninstall pyright
sudo pip3 uninstall pyright --break-system-packages
vim .config/wezterm/wezterm.lua
mkdir work
cd ~
cd .ssh
rm -rf *
ssh-keygen
git clone git@github.com:HardyJL/notes-jh.git
git config --global user.name HardyJL
git config --global user.email j.hardenberg@hotmail.de
cd work
mkdir uni
mkdir code
cd uni
mkdir cc
cd cc
git clone git@gitlab.gbar.dtu.dk:s250242/hyggec-full-group-1.git --branch johannes
mkdir drts
git clone git@github.com:HardyJL/DRTS-Project.git
LAZYGIT_VERSION=$(curl -s "https://api.github.com/repos/jesseduffield/lazygit/releases/latest" | \grep -Po '"tag_name": *"v\K[^"]*')\
curl -Lo lazygit.tar.gz "https://github.com/jesseduffield/lazygit/releases/download/v${LAZYGIT_VERSION}/lazygit_${LAZYGIT_VERSION}_Linux_x86_64.tar.gz"\
tar xf lazygit.tar.gz lazygit\
sudo install lazygit -D -t /usr/local/bin/
sudo apt install lazygit
code
./hyggec testes
xrandr
xrandr --output eDP-1 --scale 2x2
xrandr --output eDP-1 --scale 0.5x0.5
xrandr --output eDP-1 --scale 1x1
cat .xprofile
setxkbmap -option caps:escape
git switch johannes
python3 -m venv env
ll env
ll env/bin
cd env/bin
chmod +x activate
cd ../..
./env/bin/activate
sudo apt install -y nodejs npm
source env/bin/activate
kk
pip install pyright
python3 -m main 
python3 -m main Test_Cases/2-small-test-case
npm install pyright
pyright 
rm -rf node_modules
npm install -g pyright
sudo npm install -g pyright
pyright
exir
git clone https://github.com/Plyncesilva/DRTS_Project-Test-Cases.git
python3 -m main Test-Cases/2-small-test-case
python3 -m main Test-Cases/2-small-test-case 12
python3 -m main Test-Cases/1-tiny-test-case 12
python3 -m main Test-Cases/1-tiny-test-case 13
python3 -m main Test-Cases/1-tiny-test-case 14
python3 -m main Test-Cases/1-tiny-test-case 15
python3 -m main Test-Cases/1-tiny-test-case 200
python3 -m main Test-Cases/2-small-test-case 200
python3 -m main Test-Cases/2-small-test-case 22
python3 -m main Test-Cases/2-small-test-case 13
python3 -m main Test-Cases/2-small-test-case 14
$((13%14))
${{13+12}}
$((1+14))
/usr/bin/python3 /home/hannes/.vscode/extensions/ms-python.python-2025.4.0-linux-x64/python_files/printEnvVariablesToFile.py /home/hannes/.vscode/extensions/ms-python.python-2025.4.0-linux-x64/python_files/deactivate/zsh/envVars.txt
mv pcsx2-v2.2.0-linux-appimage-x64-Qt.AppImage pcsx2
chmod +x pcsx2
./hyggec rars examples/array-test.hyg
exot
cd work/uni/
ext
./hyggec compile examples/array-test.hyg
./hyggec compile examples/array-test.hyg > slicing.asm\ 
./hyggec compile examples/array-test.hyg > slicing.asm
vim examples/arrays.hyg
./hyggec parse examples/arrays.hyg -v
./src/pcsx2/pcsx2
python3 -m main Test-Cases/2-small-test-case 55
python3 -m main Test-Cases/1-tiny-test-case 10
python3 -m main Test-Cases/2-small-test-case 15
k
python3 -m main Test-Cases/1-tiny-test-case 300
python3 -m main Test-Cases/4-large-test-case 300
python3 -m main Test-Cases/2-small-test-case 20
python3 -m main Test-Cases/2-small-test-case 30
python3 -m main Test-Cases/2-small-test-case 300
python3 -m main Test-Cases/2-small-test-case 3000
pyrighy-langserver
pyright-langserver
pyright-langserver --version
pyright-langserver -v
/usr/local/bin/pyright-langserver --version
/usr/local/bin/pyright-langserver --stdio
node --version
npm --version
cla
which pyright-langserver
pyright-langserver --help
pyright-langserver -h 
pyright-langserver --stdio --version
/bin/python3 /home/hannes/.vscode/extensions/ms-python.python-2025.4.0-linux-x64/python_files/printEnvVariablesToFile.py /home/hannes/.vscode/extensions/ms-python.python-2025.4.0-linux-x64/python_files/deactivate/zsh/envVars.txt
pip install black
sudo apt install python3-autopep8
sudo apt install fzf ripgrep
cd /home/hannes/work/uni/drts/DRTS-Project/simulation
cd $(git rev-parse --show-toplevel) && fzf | /home/hannes/.vscode/extensions/rlivings39.fzf-quick-open-0.5.1/scripts/topipe.sh open /tmp/fzf-pipe-13860
rg 'main' --case-sensitive --vimgrep --color ansi | fzf --ansi | /home/hannes/.vscode/extensions/rlivings39.fzf-quick-open-0.5.1/scripts/topipe.sh rg "/tmp/fzf-pipe-13860"
systemd-analyze
llk
rm -rf Test-Cases/.git
ll Test-Cases
sudo apt install libgtk-4-dev libadwaita-1-dev git blueprint-compiler gettext libxml2-utils\

git clone https://github.com/ghostty-org/ghostty\
cd ghostty\

git checkout v1.1.3
zig build -Doptimize=ReleaseFast\

../zig/zig build -Doptimize=ReleaseFast
zig
\
echo 
fzf PATH
sudo apt install snapd
sudo apt install snap
snap install zig --classic --beta
sudo snap install zig --classic --beta
sudo apt remove snap
cd Downloads
sudo apt install ./ghostty_1.1.3-0.ppa2_amd64_24.04.deb
ghostty
cd .config
cd ghostty
cd config
vim config
ghostty +list-keybinds --default
obsidian
obsidian 
gimp
fzf gimp
fzf --help
fzf -i obsidian
cd /usr/local/share/applications/
cat mimeinfo.cache
cd ~/.local/share/applications/
cd /var/lib/flatpak
cd app
cd md.obsidian.Obsidian
./current
cd x86_64
cd stable
cd a
cd active
quit
vimcfg
./
git commit -m "feat: slicing asm"
./hyggec compile examples/test-eval.hyg
./hyggec compile test.hyg
git commit -m "feat: for in asm"
git commit -m "fix division by 0"
cd cc 
cd assembly
cim
ecit
cd pcsx2
./pcsx2
./hyggec parse examples/arrays.hyg
git commit -m 
git commit -m "fix assign"
git commit -m "lexer and parser for slicing and for in"
sleep
fastfetch
t
neofetch
cd work/uni/drts
cd 1-tiny-test-case
cat * > test.txt
cat test.txt
xclip
sudo apt install xclip
echo test
echo test | xclip
echo test | xclip -selection clipboard
cat test.txt | xclip -selection clipboard
rm test.txt
cd 2-small-test-case
cat * > xclip -selection clipboard
git pull --rebase
cd 4-large-test-case
python3 -m main Test-Cases/2-small-test-case 10
poweroff
/usr/bin/python3
cd Test-Cases
cd class-test-case
cat * | xclip -selection clipboard
git add .
git commit -m "rebuild of simulation with errors"
git push 
cd work/uni/drts/DRTS-Project
python3 -m main Test-Cases/class-test-case
python3 -m main Test-Cases/class-test-case 3
cd Test-Cases/class-test-case
cat *
python3 -m main Test-Cases/3-medium-test-case
python3 -m main Test-Cases/4-large-test-case
python3 -m main Test-Cases/5-huge-test-case
python3 -m main Test-Cases/6-gigantic-test-case
cd work/uni/cc
cd hyggec-full-group-1
git tree
git --help
git diff
git diff --help
exi
gcm "feat: for in, slicing lex, parse"
git rebase HEAD~14
select-editor
sudo update-alternatives --config editor
sudo update-alternatives --config nvim
which nvim
vim .zshrc
git rebase -i HEAD~14
dotnet clean
./hyggec parse tests/typechecker/pass/110-array-slicing.hyg -v
./hyggec typecheck tests/typechecker/pass/110-array-slicing.hyg -v
./hyggec typecheck tests/typechecker/pass/110-array-slicing.hyg 
gcm "feat: typechecking for in and slicing"
./hyggec interpret tests/typechecker/pass/110-array-slicing.hyg 
./hyggec interpret tests/typechecker/pass/110-array-slicing.hyg -v
./hyggec examples/arrays.hyg
./hyggec interpret --verbose examples/arrays.hyg
lazygit
gcm "feat: slicing interpreter"
./hyggec interpret -v examples/arrays.hyg
alias lg=lazygit
'/home/hannes/work/uni/cc/hyggec-full-group-1/src/RISCVCodegen.fs'
rars
./hyggec compile examples/arrays.hyg > test.asm
./hyggec compile examples/arrays.hyg > text.asm\

tmux
./hyggec interpret tests/interpreter/pass/101-arrays.hyg -v
./hyggec interpret tests/interpreter/pass/101-arrays.hyg
cp tests/interpreter/pass/101-arrays.hyg tests/codegen/pass
cp --help
cp tests/interpreter/pass/102-slicing.hyg tests/interpreter/pass/103-for-in.hyg -t tests/codegen/pass
./hyggec interpret tests/interpreter/pass/103-for-in.hyg
./hyggec interpret tests/interpreter/pass/103-for-in.hyg -v
./hyggec test 
./hyggec rars tests/codegen/pass/102-slicing.hyg -v 
./hyggec compile tests/codegen/pass/102-slicing.hyg  > x.asm
./rasr
tmk
lg
./hyggec compile examples/arrays.hyg
systemctl suspend
cddls
./hyggec compile tests/codegen/pass
code .
gcm "dev commit"
./hyggec compile tests/codegen/pass/102-slicing.hyg > x.asm 
./hyggec rars tests/codegen/pass/102-slicing.hyg 
K
./hyggec rars examples/arrays.hyg 
./hyggec compile examples/arrays.hyg 
./hyggec compile examples/arrays.hyg > x.asm
./hyggec compile tests/codegen/pass/101-arrays.hyg
./hyggec compile tests/codegen/pass/101-arrays.hyg > x.asm
gcm "feat: slicing"
git rebase -i HEAD~20
git rebase -i HEAD~5
git rebase --edit-todo
git rebase --continue
git rebase --abort
./hyggec interpre tests/interpreter/pass/103-for-in.hyg\

./hyggec interpret tests/interpreter/pass/103-for-in.hyg\

./hyggec typcheck tests/interpreter/pass/103-for-in.hyg\

./hyggec typecheck tests/interpreter/pass/103-for-in.hyg\

./hyggec rars tests/interpreter/pass/103-for-in.hyg\

./hyggec rars -v tests/codegen/pass/103-for-in.hyg
gcm "feat: for in"
./hyggec test -v
gcm "ref: cleanup and tests"
./hyggec typecheck examples/arrays.hyg -v
./hyggec typecheck examples/arrays.hyg
./rars
./hyggec rars examples/arrays.hyg
./hyggec rars examples/for-in.hyg
./hyggec interpret examples/for-in.hyg
./hyggec interpret examples/for-in.hyg -v
./hyggec interpret examples/arrays.hyg
./hyggec interpret examples/arrays.hyg -v
./hyggec interpret examples/arrays.hyg 
git restore examples/arrays.hyg
gcm "fix: reference interpreter"
steam --verbose > steam_log.txt 2>&1
cat steam_log.txt
rm steam_log.txt
steam
glg
go
flutter
poweroff 
sudo apt install btop
sudo apt update
sudo apt upgrade
btop
cd tests
grep shorhand
grep --helP
grep --herp
grep --help
grep -i "shorthand"
grep -rni "shorthand" *
grep -rni "sor" *
grep -rni "sand" *
grep -i "sand" *
grep -ri "sand" *
grep -ri "sand" 
grep -r "sand" *
find "sand"
find . -name "*sand*"
find . -name "*sand*" | xclip -selection
find . -name "*shorthand*"
find . -name "*short*"
find . -name "*sand*" | xclip -selection clipboard
./hyggec interpret examples/for-loop.hyg
./hyggec rars examples/for-loop.hyg
./hyggec interpret tests/interpreter/pass/102-slicing.hyg -v
./hyggec interpret tests/interpreter/pass/102-slicing.hyg
vim .
git checkout main
git merge --squash johannes
git push
git status
ga /
ga .
gcm "merge arrays sand for"
gp
vim 
nvim attach
fg
nvim
cd src
cd lua_ls
tar -xf lua-language-server-3.14.0-linux-x64.tar.gz
luksformat bin
cd bin
./lua-language-server
pwd
\
\

vim ~/.zshrc
cd src/lua_ls/bin
lua-language-server
cls
ll
git pull --fetch
git pull 
gsy
git restore .
git pull
gst
./hyggectest
./hyggec test
cd ..
cd drts
cd DRTS-Project
grep -r "for" simulation/simulation.py
grep -r "for" *
cd work/uni/cc/hyggec-full-group-1
vim
find Term Sheet
find --help
find file 
find / Term Sheet 
fzf
echo $DEV_ENV
exit
: 1746725446:0;mkdir dev
: 1746725448:0;cd dev
: 1746725479:0;mkdir .config
: 1746725482:0;cd .config
: 1746725533:0;cd ~/.config 
: 1746725535:0;ll
: 1746725594:0;cp tmux nvim ghostty -t ~/dev/.config
: 1746725600:0;cp tmux nvim ghostty -r -t ~/dev/.config
: 1746725610:0;cd ..
: 1746725612:0;cd dev/.config
: 1746725614:0;ll
: 1746725620:0;ll -r
: 1746725624:0;ll -R
: 1746725657:0;mkdir hypr
: 1746725669:0;mkdir waybar
: 1746725681:0;ll
: 1746725749:0;cd ..
: 1746725769:0;cp .zshrc .zsh_history -t dev
: 1746725771:0;ll
: 1746725781:0;cd dev
: 1746725782:0;ll
: 1746725789:0;cat *
: 1746725796:0;cat * 
: 1746725800:0;cat .zshrc
: 1746725814:0;vim .zshrc
: 1746725890:0;ll
: 1746725899:0;mkdir env
: 1746725905:0;mv * env
: 1746725916:0;mv .config/ env
: 1746725924:0;mv .zsh_history .zsh
: 1746725936:0;ll
: 1746725943:0;mv .zsh_history .zsh env
: 1746725946:0;ll
: 1746725960:0;vim .zshrc
: 1746725976:0;cp ~/.zsh_history .
